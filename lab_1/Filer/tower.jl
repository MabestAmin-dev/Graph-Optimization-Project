#-------------------------------------------------------------------------------
# Set covering problem
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
#  Load packages
#-------------------------------------------------------------------------------
using JuMP, HiGHS

#-------------------------------------------------------------------------------
# Additional functions
#-------------------------------------------------------------------------------

include("additional_functions.jl")

avdelare = repeat('-',60)

#-------------------------------------------------------------------------------
# The model saved as BOARD
#-------------------------------------------------------------------------------
BOARD = Model(HiGHS.Optimizer)
#-------------------------------------------------------------------------------


################# Student part #################################################

#-------------------------------------------------------------------------------
# Define variables
#-------------------------------------------------------------------------------
@variable(BOARD, 0 <= x[1:8, 1:8] <= 1, Int)

#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# Add objective function
#-------------------------------------------------------------------------------
@objective(BOARD, Max, sum(x[i, j] for i in 1:8, j in 1:8))

#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# Add constraints
#-------------------------------------------------------------------------------
@constraint(BOARD, con1[i in 1:8], 
    sum(x[i,j] for j in 1:8) <= 1)

@constraint(BOARD, con2[j in 1:8], 
    sum(x[i,j] for i in 1:8) <= 1)


#-------------------------------------------------------------------------------

println("\n\n\n>>> SOLVING SET COVERING PROBLEM <<<\n")
solution = optimize!(BOARD)

println("\n\n\n>>> OPTIMAL SOLUTION <<<\n")
println(avdelare)
zStar = objective_value(BOARD)
zStar = round(zStar,digits=2)
println( "Optimal objective value:\n $(zStar)")
println(avdelare)
#-------------------------------------------------------------------------------
println("Optimal Solution:")
println(avdelare)
#-------------------------------------------------------------------------------
variables = all_variables(BOARD)
chess_board = zeros(8, 8)
for i in 1:8
    for j in 1:8
        chess_board[i, j] = value(variables[(i - 1) * 8 + j])
    end
end
print_chess(chess_board)